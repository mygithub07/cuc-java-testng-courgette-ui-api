trigger:
- master
resources:
- repo: self
variables:
  tag: '$(Build.BuildId)'
stages:
- stage: Build
  displayName: Build and Push image
  jobs:
   - job: Build
     displayName: Build and Push
     pool:
        vmImage: 'ubuntu-latest'
     variables:
       azureSubscriptionEndpoint: serviceConnection07
     steps:
     - task: DockerCompose@0
       displayName: Container registry login
       inputs:
         containerregistrytype: Container Registry
         dockerRegistryEndpoint: Dockerhub           
         
     - task: DockerCompose@0
       displayName: Build services
       inputs:
         action: Build services
         azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
         dockerComposeFile: docker-compose.yml
         projectName: $(Build.Repository.Name)
         qualifyImageNames: true
         additionalImageTags: $(Build.BuildId)
               
     - task: DockerCompose@0
       displayName: Push services
       inputs:
         action: Push services
         azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
         dockerComposeFile: docker-compose.yml
         projectName: $(Build.Repository.Name)
         qualifyImageNames: true
         additionalImageTags: $(Build.BuildId)

     - task: DockerCompose@0
       displayName: Run Tests
       inputs:
         containerregistrytype: 'Container Registry'
         dockerRegistryEndpoint: Dockerhub
         dockerComposeFile: '**/docker-compose.yml'
         action: 'Run a Docker Compose command'
         dockerComposeCommand: 'up'
         detached: false
